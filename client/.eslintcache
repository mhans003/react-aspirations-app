[{"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js":"1","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js":"2","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js":"3","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js":"4","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Header/index.js":"5","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NavItem/index.js":"6","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Home.js":"7","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Login.js":"8","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Message/index.js":"9","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Container/index.js":"10","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Register.js":"11","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Aspirations.js":"12","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AspirationService.js":"13","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Aspiration/index.js":"14","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Admin.js":"15","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PrivateRoute.js":"16","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PublicRoute.js":"17","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/EditAspiration/index.js":"18","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/EditMilestone/index.js":"19","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/DeleteAspiration/index.js":"20","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/LogoutButton/index.js":"21","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Jumbotron/index.js":"22","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NewAspiration/index.js":"23","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Row/index.js":"24","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Col/index.js":"25"},{"size":413,"mtime":1609797716833,"results":"26","hashOfConfig":"27"},{"size":968,"mtime":1610210403527,"results":"28","hashOfConfig":"27"},{"size":1059,"mtime":1609797608054,"results":"29","hashOfConfig":"27"},{"size":1801,"mtime":1609878087801,"results":"30","hashOfConfig":"27"},{"size":1833,"mtime":1610210286500,"results":"31","hashOfConfig":"27"},{"size":466,"mtime":1610084428589,"results":"32","hashOfConfig":"27"},{"size":176,"mtime":1610082157359,"results":"33","hashOfConfig":"27"},{"size":3415,"mtime":1610210589629,"results":"34","hashOfConfig":"27"},{"size":623,"mtime":1609878225297,"results":"35","hashOfConfig":"27"},{"size":151,"mtime":1609804329254,"results":"36","hashOfConfig":"27"},{"size":3735,"mtime":1610210608392,"results":"37","hashOfConfig":"27"},{"size":3185,"mtime":1610129397767,"results":"38","hashOfConfig":"27"},{"size":5257,"mtime":1610212237743,"results":"39","hashOfConfig":"27"},{"size":7282,"mtime":1610211875134,"results":"40","hashOfConfig":"27"},{"size":156,"mtime":1610082247516,"results":"41","hashOfConfig":"27"},{"size":1222,"mtime":1609961453860,"results":"42","hashOfConfig":"27"},{"size":840,"mtime":1609961419890,"results":"43","hashOfConfig":"27"},{"size":2366,"mtime":1610130360036,"results":"44","hashOfConfig":"27"},{"size":2044,"mtime":1610130386766,"results":"45","hashOfConfig":"27"},{"size":1877,"mtime":1610130596883,"results":"46","hashOfConfig":"27"},{"size":1076,"mtime":1610084470094,"results":"47","hashOfConfig":"27"},{"size":184,"mtime":1610067982659,"results":"48","hashOfConfig":"27"},{"size":774,"mtime":1610129523344,"results":"49","hashOfConfig":"27"},{"size":103,"mtime":1609804360751,"results":"50","hashOfConfig":"27"},{"size":110,"mtime":1609804390641,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"e0a404",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js",[],["115","116"],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js",["117","118"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Aspirations from \"./pages/Aspirations\";\nimport Admin from \"./pages/Admin\";\nimport PrivateRoute from \"./hocs/PrivateRoute\";\nimport PublicRoute from \"./hocs/PublicRoute\";\nimport \"./pages/style.css\"\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Register}/>\n                <PublicRoute exact path=\"/login\" component={Login}/>\n                <PublicRoute exact path=\"/register\" component={Register}/>\n                <PrivateRoute exact path=\"/aspirations\" roles={[\"user\", \"admin\"]} component={Aspirations}/>\n                <PrivateRoute exact path=\"/admin\" roles={[\"admin\"]} component={Admin}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js",["119"],"import { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\n\n//Export Provider and Consumer for global state.\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            //Once the user is authenticatd, set the global state authentication.\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    }, []);\n\n    //Return the children wrapped with the provider of the global context (once loaded).\n    return (\n        <div>\n            {!isLoaded ? <h1>Loading...</h1> : \n            <AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated }}>\n                { children }\n            </AuthContext.Provider>}\n        </div>\n    );\n} \n\n","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js",["120"],"export default {\n    login: user => {\n        return fetch(\"/user/login\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            //Passport sends 401 error back if not authenticated\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return { \n                    isAuthenticated: false,\n                    user: {email: \"\", username: \"\", role: \"\"},\n                    message: {\n                        msgBody: \"Incorrect username or password.\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    register: user => {\n        return fetch(\"/user/register\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => data);\n    },\n    logout: () => {\n        return fetch(\"/user/logout\")\n            .then(response => response.json())\n            .then(data => data);\n    },\n    //Sync back-end and front-end together\n    isAuthenticated: () => {\n        return fetch(\"/user/authenticated\")\n            .then(response => {\n                //Passport sends 401 error back if not authenticated\n                if(response.status !== 401) {\n                    return response.json().then(data => data);\n                } else {\n                    return { \n                        isAuthenticated: false,\n                        user: {email: \"\", username: \"\", role: \"\"}\n                    };\n                }\n            });\n    }\n}","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Header/index.js",["121","122"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/AuthService\";\nimport { AuthContext } from \"../../Context/AuthContext\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavItem from \"../NavItem\";\nimport LogoutButton from \"../LogoutButton\"\n\nconst Header = (props) => {\n    const { isAuthenticated, user } = useContext(AuthContext);\n\n    //Render the navbar links when not logged in.\n    const unauthenticatedNabar = () => {\n        return (\n            <>\n                <NavItem text={\"LOGIN\"} tagName={\"login\"} current={props.current}/>\n                <NavItem text={\"REGISTER\"} tagName={\"register\"} current={props.current}/>\n            </>\n        );\n    };\n\n    //Render navbar links when logged in.\n    const authenticatedNavbar = () => {\n        return (\n            <>\n                <NavItem text={`Welcome, ${user.username}`} tagName={\"aspirations\"} current={props.current}/>\n                {\n                    user.role === \"admin\" ? \n                    <NavItem text={\"ADMIN\"} tagName={\"admin\"} current={props.current}/> : null\n                }\n                <LogoutButton/>\n            </>\n        );\n    };\n\n    return (\n        <Navbar className=\"navbar-light bg-light p-5\" expand=\"md\">\n            <Navbar.Brand href=\"/\"><span className=\"larger-spacing larger-text font-light\">ASP<span className=\"golden-yellow\">↑</span>RE</span></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    { !isAuthenticated ? unauthenticatedNabar() : authenticatedNavbar() }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NavItem/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Home.js",["123"],"import Jumbotron from \"../components/Jumbotron\";\nimport Header from \"../components/Header\";\n\nconst Home = () => {\n    return (\n        <Header/>\n    );\n};\n\nexport default Home;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Login.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Message/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Container/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Register.js",["124"],"import { useState, useRef, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n//Import Components\nimport Container from \"../components/Container\";\nimport Message from \"../components/Message\";\nimport Header from \"../components/Header\";\n\nconst Register = (props) => {\n    //Initialize user state.\n    const [user, setUser] = useState({email: \"\", username: \"\", password: \"\", role: \"\"});\n    //Initialize message state.\n    const [message, setMessage] = useState(null);\n    //Set input fields to enabled by default until logged in.\n    const [disabled, setDisabled] = useState(false);\n\n    //Create a reference for the timer.\n    let timerID = useRef(null);\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timerID);\n        }\n    }, []);\n\n    //When the input changes, set the username/password to the current value.\n    const handleChange = (event) => {\n        event.preventDefault();\n        setUser(\n            {\n                ...user, \n                [event.target.name] : event.target.value\n            }\n        );\n    }\n\n    /*\n    const resetForm = () => {\n        setUser(\n            {\n                email: \"\",\n                username: \"\", \n                password: \"\", \n                role: \"\",\n            }\n        );\n    }\n    */\n\n    //Handle when the form is submitted.\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //Send user information to sign up.\n        AuthService.register(user).then(data => {\n            //After registering, get the message returned back.\n            const { message } = data;\n            setMessage(message);\n            //Reset the form.\n            //resetForm();\n            //As long as there is no error, set the timer for 2 seconds to redirect to login page after registering.\n            if(!message.msgError) {\n                setDisabled(true);\n                timerID = setTimeout(() => {\n                    props.history.push(\"/login\");\n                }, 2000);\n            }\n        });\n    };\n\n    return (\n        <>\n        <Header/>\n        <Container>\n            <form className=\"mt-5\" onSubmit={handleSubmit}>\n                <h3 className=\"text-center my-4 font-light larger-spacing squeezed\">REGISTER</h3>\n                <hr className=\"my-4\"/>\n                <div className=\"form-group\">\n                    <input type=\"email\" name=\"email\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Email\" aria-label=\"Enter Email\" disabled={disabled} required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" name=\"username\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Enter Username\" disabled={disabled} minLength=\"5\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"password\" name=\"password\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Enter Password\" disabled={disabled} minLength=\"8\" required/>\n                </div>\n                <div className=\"form-group d-none\">\n                    <input type=\"text\" name=\"role\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"user\" value=\"user\" disabled={true}/>\n                </div>\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" disabled={disabled}>\n                    SIGN UP\n                </button>\n            </form>\n            {message ? <Message message={message}/> : null}\n        </Container>\n        </>\n    );\n};\n\nexport default Register;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Aspirations.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AspirationService.js",["125"],"export default {\n    //Get all aspirations.\n    getAspirations: () => {\n        return fetch(\"/user/aspirations\")\n            .then(response => {\n                if(response.status !== 401) {\n                    return response.json().then(data => data);\n                } else {\n                    return {\n                        message: {\n                            msgBody: \"Unauthorized\",\n                            msgError: true\n                        }\n                    };\n                }\n            });\n    },\n    //Save one aspiration.\n    postAspiration: (aspiration) => {\n        return fetch(\"/user/aspiration\", {\n            method: \"post\",\n            body: JSON.stringify(aspiration),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return {\n                    message: {\n                        msgBody: \"Unauthorized\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    //Post a milestone\n    postMilestone: (aspirationId, milestone) => {\n        return fetch(`/user/aspiration/${aspirationId}`, {\n            method: \"put\",\n            body: JSON.stringify(milestone),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return {\n                    message: {\n                        msgBody: \"Unauthorized\",\n                        msgError: true\n                    }\n                };\n            }\n        })\n    },\n    //Delete a milestone from an aspiration\n    deleteMilestone: (aspirationId, milestoneId) => {\n        return fetch(`/user/aspiration/${aspirationId}`, {\n            method: \"delete\",\n            body: JSON.stringify(milestoneId),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return {\n                    message: {\n                        msgBody: \"Unauthorized\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    //Edit an aspiration\n    editAspiration: (aspirationId, newAspiration) => {\n        return fetch(`/user/edit/aspiration/${aspirationId}`, {\n            method: \"put\",\n            body: JSON.stringify(newAspiration),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return {\n                    message: {\n                        msgBody: \"Unauthorized\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    //Edit a milestone in an existing aspiration.\n    editMilestone: (milestoneId, editedMilestone, aspirationId) => {\n        return fetch(`/user/aspiration/${aspirationId}/${milestoneId}`, {\n            method: \"put\",\n            body: JSON.stringify(editedMilestone),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return {\n                    message: {\n                        msgBody: \"Unauthorized\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    //Delete an existing aspiration.\n    deleteAspiration: (aspirationId) => {\n        return fetch(`/user/aspiration/delete/${aspirationId}`, {\n            method: \"delete\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return {\n                    message: {\n                        msgBody: \"Unauthorized\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    //Toggle status as in progress/complete\n    toggleComplete: (aspirationId, aspirationStatus) => {\n        return fetch(`/user/status/${aspirationId}`, {\n            method: \"put\",\n            body: JSON.stringify(aspirationStatus),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return {\n                    message: {\n                        msgBody: \"Unauthorized\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    }\n}","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Aspiration/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Admin.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PrivateRoute.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PublicRoute.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/EditAspiration/index.js",["126","127","128","129"],"import React, { useRef } from \"react\";\nimport { Modal, Button, Container, Row, Col } from 'react-bootstrap';\nimport AspirationService from \"../../Services/AspirationService\";\n\nfunction EditAspiration(props) {\n    //Create references to the edit fields\n    const titleRef = useRef();\n    const descriptionRef = useRef();\n\n    //Handle submit here\n    const handleSubmit = event => {\n        event.preventDefault();\n        //Create a new aspiration object to submit.\n        const editedAspiration = {\n            title: titleRef.current.value,\n            description: descriptionRef.current.value\n        };\n\n        console.log(editedAspiration);\n\n        AspirationService.editAspiration(props.id, editedAspiration).then(data => {\n            console.log(data);\n            //After editing aspiration, retrieve aspirations again.\n            props.retrieveAspirations();\n        });\n    };\n\n    return (\n        <>\n            <Modal show={props.editAspirationShow} onHide={props.handleEditAspirationClose}>\n                <Modal.Header closeButton className=\"dim-background\">\n                    <Modal.Title>\n                        <h2 className=\"font-light squeezed\">Edit Aspiration</h2>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    <div>\n                        <form className=\"form-group my-3\" onSubmit={handleSubmit}>\n                            <input className=\"form-control form-control-lg mb-3\" minLength=\"1\" maxLength=\"50\" placeholder=\"What are you aspiring for?\" defaultValue={props.title} ref={titleRef} required/>\n                            <input className=\"form-control form-control-lg mb-3\" minLength=\"1\" maxLength=\"250\" placeholder=\"Description\" defaultValue={props.description} ref={descriptionRef} required/>\n                            <button className=\"btn btn-primary btn-lg btn-block mt-3 mb-3\" type=\"submit\" onClick={() => {\n                                props.handleEditAspirationClose();\n                            }}>\n                                Save <i className=\"fal fa-save\"></i>\n                            </button>\n                        </form>\n                        <hr className=\"mb-4\"/>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default EditAspiration;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/EditMilestone/index.js",["130","131","132","133"],"import React, { useRef } from \"react\";\nimport { Modal, Button, Container, Row, Col } from 'react-bootstrap';\nimport AspirationService from \"../../Services/AspirationService\";\n\nfunction EditMilestone(props) {\n    //Create references to the edit fields\n    const textRef = useRef();\n\n    //Handle submit here\n    const handleSubmit = event => {\n        event.preventDefault();\n        //Create a new aspiration object to submit.\n        const editedMilestone = {\n            text: textRef.current.value\n        };\n\n        console.log(editedMilestone);\n\n        AspirationService.editMilestone(props.id, editedMilestone, props.aspirationId).then(data => {\n            console.log(data);\n            //After editing milestone, retrieve aspirations again.\n            props.retrieveAspirations();\n        });\n    };\n\n    return (\n        <>\n            <Modal show={props.editMilestoneShow} onHide={props.handleEditMilestoneClose}>\n                <Modal.Header closeButton className=\"dim-background\">\n                    <Modal.Title>\n                        <h2 className=\"font-light squeezed\">Edit Milestone</h2>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    <div>\n                        <form className=\"form-group my-3\" onSubmit={handleSubmit}>\n                            <input className=\"form-control form-control-lg mb-3\" minLength=\"1\" placeholder=\"Milestone\" defaultValue={props.text} ref={textRef} required/>\n                            <button className=\"btn btn-primary btn-lg btn-block mt-3 mb-3\" type=\"submit\" onClick={() => {\n                                props.handleEditMilestoneClose();\n                            }}>\n                                Save <i className=\"fal fa-save\"></i>\n                            </button>\n                        </form>\n                        <hr className=\"mb-4\"/>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default EditMilestone;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/DeleteAspiration/index.js",["134","135","136","137"],"import { Modal, Button, Container, Row, Col } from 'react-bootstrap';\nimport AspirationService from \"../../Services/AspirationService\";\n\nfunction DeleteAspiration(props) {\n    //Handle submit here\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        AspirationService.deleteAspiration(props.id).then(data => {\n            console.log(data);\n            //After deleting aspiration, retrieve aspirations again.\n            props.retrieveAspirations();\n        });\n    };\n\n    return (\n        <>\n            <Modal show={props.deleteAspirationShow} onHide={props.handleDeleteAspirationClose}>\n                <Modal.Header closeButton className=\"dim-background\">\n                    <Modal.Title>\n                        <h2 className=\"font-light squeezed\">Confirm Delete</h2>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    <div>\n                        <form className=\"form-group my-3\" onSubmit={handleSubmit}>\n                            <h3 className=\"font-light squeezed\">Are you sure you want to delete this aspiration and all its milestones?</h3>\n                            <hr/>\n                            <p><strong>{props.title}</strong></p>\n                            <p><i>{props.description}</i></p>\n                            <button className=\"btn btn-danger btn-lg btn-block mt-3 mb-3\" type=\"submit\" onClick={() => {\n                                props.handleDeleteAspirationClose();\n                            }}>\n                                Delete <i className=\"fas fa-trash-alt\"></i>\n                            </button>\n                        </form>\n                        <hr className=\"mb-4\"/>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default DeleteAspiration;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/LogoutButton/index.js",["138","139"],"import { useContext } from \"react\";\nimport { AuthContext } from \"../../Context/AuthContext\";\nimport AuthService from \"../../Services/AuthService\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\nconst LogoutButton = () => {\n\n    const { isAuthenticated, user, setIsAuthenticated, setUser } = useContext(AuthContext);\n\n    //Handle logging the user out.\n    const handleLogOut = () => {\n        //Using the logout function in AuthService, log the user out.\n        AuthService.logout().then(data => {\n            //From server, we will now have an empty user, so we want to update the global state.\n            if(data.success) {\n                setUser(data.user);\n                setIsAuthenticated(false);\n            }\n        });\n    };\n\n    return (\n        <span className=\"nav-item px-3\">\n            <Nav.Link onClick={handleLogOut}>\n                <div className=\"text-center text-dark\">\n                    <hr className=\"hr-light d-md-none\"/>\n                    LOGOUT\n                </div>\n            </Nav.Link>\n        </span>\n    );\n}\n\nexport default LogoutButton;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Jumbotron/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NewAspiration/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Row/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Col/index.js",[],["140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":7,"column":1,"nodeType":"153","endLine":30,"endColumn":2},{"ruleId":"151","severity":1,"message":"154","line":1,"column":1,"nodeType":"153","endLine":55,"endColumn":2},{"ruleId":"146","severity":1,"message":"155","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"156","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"157","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":17},{"ruleId":"146","severity":1,"message":"158","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":21},{"ruleId":"151","severity":1,"message":"154","line":1,"column":1,"nodeType":"153","endLine":164,"endColumn":2},{"ruleId":"146","severity":1,"message":"159","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":23},{"ruleId":"146","severity":1,"message":"160","line":2,"column":25,"nodeType":"148","messageId":"149","endLine":2,"endColumn":34},{"ruleId":"146","severity":1,"message":"161","line":2,"column":36,"nodeType":"148","messageId":"149","endLine":2,"endColumn":39},{"ruleId":"146","severity":1,"message":"162","line":2,"column":41,"nodeType":"148","messageId":"149","endLine":2,"endColumn":44},{"ruleId":"146","severity":1,"message":"159","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":23},{"ruleId":"146","severity":1,"message":"160","line":2,"column":25,"nodeType":"148","messageId":"149","endLine":2,"endColumn":34},{"ruleId":"146","severity":1,"message":"161","line":2,"column":36,"nodeType":"148","messageId":"149","endLine":2,"endColumn":39},{"ruleId":"146","severity":1,"message":"162","line":2,"column":41,"nodeType":"148","messageId":"149","endLine":2,"endColumn":44},{"ruleId":"146","severity":1,"message":"159","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":23},{"ruleId":"146","severity":1,"message":"160","line":1,"column":25,"nodeType":"148","messageId":"149","endLine":1,"endColumn":34},{"ruleId":"146","severity":1,"message":"161","line":1,"column":36,"nodeType":"148","messageId":"149","endLine":1,"endColumn":39},{"ruleId":"146","severity":1,"message":"162","line":1,"column":41,"nodeType":"148","messageId":"149","endLine":1,"endColumn":44},{"ruleId":"146","severity":1,"message":"163","line":9,"column":13,"nodeType":"148","messageId":"149","endLine":9,"endColumn":28},{"ruleId":"146","severity":1,"message":"164","line":9,"column":30,"nodeType":"148","messageId":"149","endLine":9,"endColumn":34},{"ruleId":"142","replacedBy":"165"},{"ruleId":"144","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'Link' is defined but never used.","'AuthService' is defined but never used.","'Jumbotron' is defined but never used.","'AuthContext' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.",["167"],["168"],"no-global-assign","no-unsafe-negation"]