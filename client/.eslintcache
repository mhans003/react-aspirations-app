[{"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js":"1","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js":"2","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js":"3","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js":"4","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Header/index.js":"5","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NavItem/index.js":"6","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Home.js":"7","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Login.js":"8","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Message/index.js":"9","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Container/index.js":"10","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Register.js":"11","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Aspirations.js":"12","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AspirationService.js":"13","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Aspiration/index.js":"14","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Admin.js":"15","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PrivateRoute.js":"16","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PublicRoute.js":"17","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/EditAspiration/index.js":"18"},{"size":413,"mtime":1609797716833,"results":"19","hashOfConfig":"20"},{"size":962,"mtime":1609961794452,"results":"21","hashOfConfig":"20"},{"size":1059,"mtime":1609797608054,"results":"22","hashOfConfig":"20"},{"size":1801,"mtime":1609878087801,"results":"23","hashOfConfig":"20"},{"size":2556,"mtime":1609877212055,"results":"24","hashOfConfig":"20"},{"size":508,"mtime":1609876829713,"results":"25","hashOfConfig":"20"},{"size":96,"mtime":1609804553944,"results":"26","hashOfConfig":"20"},{"size":3279,"mtime":1609879532578,"results":"27","hashOfConfig":"20"},{"size":623,"mtime":1609878225297,"results":"28","hashOfConfig":"20"},{"size":151,"mtime":1609804329254,"results":"29","hashOfConfig":"20"},{"size":3599,"mtime":1609881527244,"results":"30","hashOfConfig":"20"},{"size":3458,"mtime":1609892595241,"results":"31","hashOfConfig":"20"},{"size":3201,"mtime":1609974260708,"results":"32","hashOfConfig":"20"},{"size":3678,"mtime":1609973201774,"results":"33","hashOfConfig":"20"},{"size":91,"mtime":1609959358690,"results":"34","hashOfConfig":"20"},{"size":1222,"mtime":1609961453860,"results":"35","hashOfConfig":"20"},{"size":840,"mtime":1609961419890,"results":"36","hashOfConfig":"20"},{"size":2333,"mtime":1609973427428,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"e0a404",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js",[],["81","82"],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js",["83"],"import { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\n\n//Export Provider and Consumer for global state.\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            //Once the user is authenticatd, set the global state authentication.\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    }, []);\n\n    //Return the children wrapped with the provider of the global context (once loaded).\n    return (\n        <div>\n            {!isLoaded ? <h1>Loading...</h1> : \n            <AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated }}>\n                { children }\n            </AuthContext.Provider>}\n        </div>\n    );\n} \n\n","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js",["84"],"export default {\n    login: user => {\n        return fetch(\"/user/login\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            //Passport sends 401 error back if not authenticated\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return { \n                    isAuthenticated: false,\n                    user: {email: \"\", username: \"\", role: \"\"},\n                    message: {\n                        msgBody: \"Incorrect username or password.\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    register: user => {\n        return fetch(\"/user/register\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => data);\n    },\n    logout: () => {\n        return fetch(\"/user/logout\")\n            .then(response => response.json())\n            .then(data => data);\n    },\n    //Sync back-end and front-end together\n    isAuthenticated: () => {\n        return fetch(\"/user/authenticated\")\n            .then(response => {\n                //Passport sends 401 error back if not authenticated\n                if(response.status !== 401) {\n                    return response.json().then(data => data);\n                } else {\n                    return { \n                        isAuthenticated: false,\n                        user: {email: \"\", username: \"\", role: \"\"}\n                    };\n                }\n            });\n    }\n}","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Header/index.js",["85"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/AuthService\";\nimport { AuthContext } from \"../../Context/AuthContext\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nimport NavItem from \"../NavItem\";\n\nconst Header = (props) => {\n    const { isAuthenticated, user, setIsAuthenticated, setUser } = useContext(AuthContext);\n\n    //Handle logging the user out.\n    const handleLogOut = () => {\n        //Using the logout function in AuthService, log the user out.\n        AuthService.logout().then(data => {\n            //From server, we will now have an empty user, so we want to update the global state.\n            if(data.success) {\n                setUser(data.user);\n                setIsAuthenticated(false);\n            }\n        });\n    };\n\n    //Render the navbar links when not logged in.\n    const unauthenticatedNabar = () => {\n        return (\n            <>\n                <NavItem text={\"HOME\"} tagName={\"\"} current={props.current}/>\n                <NavItem text={\"LOGIN\"} tagName={\"login\"} current={props.current}/>\n                <NavItem text={\"REGISTER\"} tagName={\"register\"} current={props.current}/>\n            </>\n        );\n    };\n\n    //Render navbar links when logged in.\n    const authenticatedNavbar = () => {\n        return (\n            <>\n                <NavItem text={user.username} tagName={\"\"} current={props.current}/>\n                <NavItem text={\"HOME\"} tagName={\"\"} current={props.current}/>\n                <NavItem text={\"ASPIRATIONS\"} tagName={\"aspirations\"} current={props.current}/>\n                {\n                    user.role === \"admin\" ? \n                    <NavItem text={\"ADMIN\"} tagName={\"admin\"} current={props.current}/> : null\n                }\n                <span className=\"nav-item\">\n                    <button type=\"button\" className=\"btn btn-link\" onClick={handleLogOut}>\n                        LOGOUT\n                    </button>\n                </span>\n            </>\n        );\n    };\n\n    return (\n        <Navbar className=\"navbar-light bg-light\" expand=\"md\">\n            <Navbar.Brand href=\"/\">ASPIRATIONS</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    { !isAuthenticated ? unauthenticatedNabar() : authenticatedNavbar() }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NavItem/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Home.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Login.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Message/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Container/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Register.js",["86"],"import { useState, useRef, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n//Import Components\nimport Container from \"../components/Container\";\nimport Message from \"../components/Message\";\n\nconst Register = (props) => {\n    //Initialize user state.\n    const [user, setUser] = useState({email: \"\", username: \"\", password: \"\", role: \"\"});\n    //Initialize message state.\n    const [message, setMessage] = useState(null);\n    //Set input fields to enabled by default until logged in.\n    const [disabled, setDisabled] = useState(false);\n\n    //Create a reference for the timer.\n    let timerID = useRef(null);\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timerID);\n        }\n    }, []);\n\n    //When the input changes, set the username/password to the current value.\n    const handleChange = (event) => {\n        event.preventDefault();\n        setUser(\n            {\n                ...user, \n                [event.target.name] : event.target.value\n            }\n        );\n    }\n\n    /*\n    const resetForm = () => {\n        setUser(\n            {\n                email: \"\",\n                username: \"\", \n                password: \"\", \n                role: \"\",\n            }\n        );\n    }\n    */\n\n    //Handle when the form is submitted.\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //Send user information to sign up.\n        AuthService.register(user).then(data => {\n            //After registering, get the message returned back.\n            const { message } = data;\n            setMessage(message);\n            //Reset the form.\n            //resetForm();\n            //As long as there is no error, set the timer for 2 seconds to redirect to login page after registering.\n            if(!message.msgError) {\n                setDisabled(true);\n                timerID = setTimeout(() => {\n                    props.history.push(\"/login\");\n                }, 2000);\n            }\n        });\n    };\n\n    return (\n        <Container>\n            <form onSubmit={handleSubmit}>\n                <h3 className=\"text-center my-4\">Register</h3>\n                <hr className=\"my-4\"/>\n                <div className=\"form-group\">\n                    <input type=\"email\" name=\"email\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Email\" aria-label=\"Enter Email\" disabled={disabled} required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" name=\"username\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Enter Username\" disabled={disabled} minLength=\"5\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"password\" name=\"password\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Enter Password\" disabled={disabled} minLength=\"8\" required/>\n                </div>\n                <div className=\"form-group d-none\">\n                    <input type=\"text\" name=\"role\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"user\" value=\"user\" disabled={true}/>\n                </div>\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" disabled={disabled}>\n                    Sign Up\n                </button>\n            </form>\n            {message ? <Message message={message}/> : null}\n        </Container>\n    );\n};\n\nexport default Register;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Aspirations.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AspirationService.js",["87"],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Aspiration/index.js",["88"],"import { useState } from \"react\";\nimport AspirationService from \"../../Services/AspirationService\";\n\nimport EditAspiration from \"../EditAspiration\";\n\nconst Aspiration = (props) => {\n    console.log(props.aspiration.milestones);\n\n    //Set state for edit modal.\n    const [editAspirationShow, setEditAspirationShow] = useState(false);\n\n    const [milestone, setMilestone] = useState({text: \"\", id: \"\"});\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        console.log(milestone);\n\n        AspirationService.postMilestone(props.aspiration._id, milestone).then(data => {\n            console.log(data);\n            //After adding milestone, retrieve aspirations again.\n            props.retrieveAspirations();\n        });\n    }\n\n    const onChange = event => {\n        setMilestone({\n            text: event.target.value,\n            id: props.aspiration._id + (Math.floor(Math.random() * 999999) + 1) + (Math.floor(Math.random() * 999999) + 1)\n        });\n    }\n\n    const resetForm = () => {\n        setMilestone({text: \"\", id: \"\"});\n    }\n\n    const handleMilestoneDelete = (event) => {\n        console.log(event.target.getAttribute(\"milestoneId\"));\n        AspirationService.deleteMilestone(props.aspiration._id, {id: event.target.getAttribute(\"milestoneId\")}).then(data => {\n            console.log(data);\n            //After deleting milestone, retrieve aspirations again.\n            props.retrieveAspirations();\n        });\n    }\n\n    //Modal handlers\n    const handleEditAspirationClose = () => setEditAspirationShow(false);\n    const handleEditAspirationShow = () => setEditAspirationShow(true);\n\n    return (\n        <div className=\"card\">\n            <h5 className=\"card-header\">\n                {props.aspiration.title}\n                <button className=\"btn btn-secondary fas fa-edit\" onClick={() => handleEditAspirationShow()}></button>\n                <button className=\"btn btn-danger fas fa-trash-alt\"></button>\n            </h5>\n            <div className=\"card-body\">\n                <p className=\"card-text\">{props.aspiration.description}</p>\n                <ul>\n                    {\n                        props.aspiration.milestones ?\n                        props.aspiration.milestones.map(milestone => {\n                            return (\n                                <li>\n                                    {milestone.text}\n                                    <button milestoneId={milestone.id} onClick={handleMilestoneDelete} class=\"btn btn-sm btn-danger fas fa-trash-alt\">\n                                    </button>\n                                </li>\n                            );\n                        }) : null\n                    }\n                </ul>\n                <hr/>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"milestone\" value={milestone.text} onChange={onChange} className=\"form-control\" minLength=\"1\" required placeholder=\"New Milestone\"/>\n                    </div>\n                    <button className=\"btn btn-sm btn-primary btn-block\" type=\"submit\">\n                        Submit\n                    </button>\n                </form>\n            </div>\n            <EditAspiration \n                title={props.aspiration.title} \n                description={props.aspiration.description} \n                id={props.aspiration._id}\n                editAspirationShow={editAspirationShow}\n                handleEditAspirationClose={handleEditAspirationClose}\n                retrieveAspirations={props.retrieveAspirations}\n            />\n        </div>\n    );\n}\n\nexport default Aspiration;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Admin.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PrivateRoute.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/hocs/PublicRoute.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/EditAspiration/index.js",["89","90","91","92"],"import React, { useRef } from \"react\";\nimport { Modal, Button, Container, Row, Col } from 'react-bootstrap';\nimport AspirationService from \"../../Services/AspirationService\";\n\nfunction EditAspiration(props) {\n    //Create references to the edit fields\n    const titleRef = useRef();\n    const descriptionRef = useRef();\n\n    //Handle submit here\n    const handleSubmit = event => {\n        event.preventDefault();\n        //Create a new aspiration object to submit.\n        const editedAspiration = {\n            title: titleRef.current.value,\n            description: descriptionRef.current.value\n        };\n\n        console.log(editedAspiration);\n\n        AspirationService.editAspiration(props.id, editedAspiration).then(data => {\n            console.log(data);\n            //After editing milestone, retrieve aspirations again.\n            props.retrieveAspirations();\n        });\n    };\n\n    return (\n        <>\n            <Modal show={props.editAspirationShow} onHide={props.handleEditAspirationClose}>\n                <Modal.Header closeButton className=\"dim-background\">\n                    <Modal.Title>\n                        <h2>Edit Aspiration</h2>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    <div>\n                        <form className=\"form-group my-3\" onSubmit={handleSubmit}>\n                            <input className=\"form-control form-control-lg mb-3\" minLength=\"1\" maxLength=\"50\" placeholder=\"What are you aspiring for?\" defaultValue={props.title} ref={titleRef} required/>\n                            <input className=\"form-control form-control-lg mb-3\" minLength=\"1\" maxLength=\"250\" placeholder=\"Description\" defaultValue={props.description} ref={descriptionRef} required/>\n                            <button className=\"btn btn-primary btn-lg btn-block mt-3 mb-3\" type=\"submit\" onClick={() => {\n                                props.handleEditAspirationClose();\n                            }}>\n                                Save <i className=\"fal fa-save\"></i>\n                            </button>\n                        </form>\n                        <hr className=\"mb-4\"/>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default EditAspiration;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":7,"column":1,"nodeType":"99","endLine":30,"endColumn":2},{"ruleId":"97","severity":1,"message":"100","line":1,"column":1,"nodeType":"99","endLine":55,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"100","line":1,"column":1,"nodeType":"99","endLine":102,"endColumn":2},{"ruleId":"101","severity":1,"message":"106","line":33,"column":11,"nodeType":"103","messageId":"104","endLine":33,"endColumn":20},{"ruleId":"101","severity":1,"message":"107","line":2,"column":17,"nodeType":"103","messageId":"104","endLine":2,"endColumn":23},{"ruleId":"101","severity":1,"message":"108","line":2,"column":25,"nodeType":"103","messageId":"104","endLine":2,"endColumn":34},{"ruleId":"101","severity":1,"message":"109","line":2,"column":36,"nodeType":"103","messageId":"104","endLine":2,"endColumn":39},{"ruleId":"101","severity":1,"message":"110","line":2,"column":41,"nodeType":"103","messageId":"104","endLine":2,"endColumn":44},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'resetForm' is assigned a value but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]