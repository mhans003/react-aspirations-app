[{"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js":"1","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js":"2","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js":"3","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js":"4","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Header/index.js":"5","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NavItem/index.js":"6","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Home.js":"7","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Login.js":"8","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Message/index.js":"9","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Container/index.js":"10","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Register.js":"11","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Aspirations.js":"12","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AspirationService.js":"13","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Aspiration/index.js":"14"},{"size":413,"mtime":1609797716833,"results":"15","hashOfConfig":"16"},{"size":704,"mtime":1609881686370,"results":"17","hashOfConfig":"16"},{"size":1059,"mtime":1609797608054,"results":"18","hashOfConfig":"16"},{"size":1801,"mtime":1609878087801,"results":"19","hashOfConfig":"16"},{"size":2556,"mtime":1609877212055,"results":"20","hashOfConfig":"16"},{"size":508,"mtime":1609876829713,"results":"21","hashOfConfig":"16"},{"size":96,"mtime":1609804553944,"results":"22","hashOfConfig":"16"},{"size":3279,"mtime":1609879532578,"results":"23","hashOfConfig":"16"},{"size":623,"mtime":1609878225297,"results":"24","hashOfConfig":"16"},{"size":151,"mtime":1609804329254,"results":"25","hashOfConfig":"16"},{"size":3599,"mtime":1609881527244,"results":"26","hashOfConfig":"16"},{"size":3304,"mtime":1609884576934,"results":"27","hashOfConfig":"16"},{"size":1170,"mtime":1609882450936,"results":"28","hashOfConfig":"16"},{"size":384,"mtime":1609884681213,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"e0a404",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js",[],["62","63"],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js",["64"],"import { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\n\n//Export Provider and Consumer for global state.\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            //Once the user is authenticatd, set the global state authentication.\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    }, []);\n\n    //Return the children wrapped with the provider of the global context (once loaded).\n    return (\n        <div>\n            {!isLoaded ? <h1>Loading...</h1> : \n            <AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated }}>\n                { children }\n            </AuthContext.Provider>}\n        </div>\n    );\n} \n\n","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js",["65"],"export default {\n    login: user => {\n        return fetch(\"/user/login\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            //Passport sends 401 error back if not authenticated\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return { \n                    isAuthenticated: false,\n                    user: {email: \"\", username: \"\", role: \"\"},\n                    message: {\n                        msgBody: \"Incorrect username or password.\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    register: user => {\n        return fetch(\"/user/register\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => data);\n    },\n    logout: () => {\n        return fetch(\"/user/logout\")\n            .then(response => response.json())\n            .then(data => data);\n    },\n    //Sync back-end and front-end together\n    isAuthenticated: () => {\n        return fetch(\"/user/authenticated\")\n            .then(response => {\n                //Passport sends 401 error back if not authenticated\n                if(response.status !== 401) {\n                    return response.json().then(data => data);\n                } else {\n                    return { \n                        isAuthenticated: false,\n                        user: {email: \"\", username: \"\", role: \"\"}\n                    };\n                }\n            });\n    }\n}","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Header/index.js",["66"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/AuthService\";\nimport { AuthContext } from \"../../Context/AuthContext\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nimport NavItem from \"../NavItem\";\n\nconst Header = (props) => {\n    const { isAuthenticated, user, setIsAuthenticated, setUser } = useContext(AuthContext);\n\n    //Handle logging the user out.\n    const handleLogOut = () => {\n        //Using the logout function in AuthService, log the user out.\n        AuthService.logout().then(data => {\n            //From server, we will now have an empty user, so we want to update the global state.\n            if(data.success) {\n                setUser(data.user);\n                setIsAuthenticated(false);\n            }\n        });\n    };\n\n    //Render the navbar links when not logged in.\n    const unauthenticatedNabar = () => {\n        return (\n            <>\n                <NavItem text={\"HOME\"} tagName={\"\"} current={props.current}/>\n                <NavItem text={\"LOGIN\"} tagName={\"login\"} current={props.current}/>\n                <NavItem text={\"REGISTER\"} tagName={\"register\"} current={props.current}/>\n            </>\n        );\n    };\n\n    //Render navbar links when logged in.\n    const authenticatedNavbar = () => {\n        return (\n            <>\n                <NavItem text={user.username} tagName={\"\"} current={props.current}/>\n                <NavItem text={\"HOME\"} tagName={\"\"} current={props.current}/>\n                <NavItem text={\"ASPIRATIONS\"} tagName={\"aspirations\"} current={props.current}/>\n                {\n                    user.role === \"admin\" ? \n                    <NavItem text={\"ADMIN\"} tagName={\"admin\"} current={props.current}/> : null\n                }\n                <span className=\"nav-item\">\n                    <button type=\"button\" className=\"btn btn-link\" onClick={handleLogOut}>\n                        LOGOUT\n                    </button>\n                </span>\n            </>\n        );\n    };\n\n    return (\n        <Navbar className=\"navbar-light bg-light\" expand=\"md\">\n            <Navbar.Brand href=\"/\">ASPIRATIONS</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    { !isAuthenticated ? unauthenticatedNabar() : authenticatedNavbar() }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/NavItem/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Home.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Login.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Message/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Container/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Register.js",["67"],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/pages/Aspirations.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AspirationService.js",["68"],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/components/Aspiration/index.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":1,"nodeType":"76","endLine":30,"endColumn":2},{"ruleId":"74","severity":1,"message":"77","line":1,"column":1,"nodeType":"76","endLine":55,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":21},{"ruleId":"74","severity":1,"message":"77","line":1,"column":1,"nodeType":"76","endLine":39,"endColumn":2},{"ruleId":"78","severity":1,"message":"83","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":19},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'Aspirations' is defined but never used.","no-global-assign","no-unsafe-negation"]