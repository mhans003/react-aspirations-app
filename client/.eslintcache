[{"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js":"1","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js":"2","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js":"3","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js":"4"},{"size":413,"mtime":1609797716833,"results":"5","hashOfConfig":"6"},{"size":403,"mtime":1609797851821,"results":"7","hashOfConfig":"6"},{"size":1059,"mtime":1609797608054,"results":"8","hashOfConfig":"6"},{"size":1311,"mtime":1609797162649,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"e0a404",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/index.js",[],["22","23"],"/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/App.js",["24","25"],"import { useContext } from \"react\";\nimport { AuthContext } from \"./Context/AuthContext\";\n\nfunction App() {\n    //Pull out values from context (global state), using the AuthContext.\n    const { user, setUser, isAuthenticated, setIsAuthenticated } = useContext(AuthContext);\n    console.log(user);\n    console.log(isAuthenticated);\n    return (\n        <div>Placeholder</div>\n    );\n}\n\nexport default App;","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Context/AuthContext.js",["26"],"import { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\n\n//Export Provider and Consumer for global state.\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            //Once the user is authenticatd, set the global state authentication.\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    }, []);\n\n    //Return the children wrapped with the provider of the global context (once loaded).\n    return (\n        <div>\n            {!isLoaded ? <h1>Loading...</h1> : \n            <AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated }}>\n                { children }\n            </AuthContext.Provider>}\n        </div>\n    );\n} \n\n","/Users/michaelhanson/Documents/Bootcamp/Week22/aspirations/client/src/Services/AuthService.js",["27"],"export default {\n    login: user => {\n        return fetch(\"/user/login\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => data);\n    },\n    register: user => {\n        return fetch(\"/user/register\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => data);\n    },\n    logout: () => {\n        return fetch(\"/user/logout\")\n            .then(response => response.json())\n            .then(data => data);\n    },\n    //Sync back-end and front-end together\n    isAuthenticated: () => {\n        return fetch(\"/user/authenticated\")\n            .then(response => {\n                //Passport sends 401 error back if not authenticated\n                if(response.status !== 401) {\n                    return response.json().then(data => data);\n                } else {\n                    return { \n                        isAuthenticated: false,\n                        user: {username: \"\", role: \"\"}\n                    };\n                }\n            });\n    }\n}",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":6,"column":19,"nodeType":"34","messageId":"35","endLine":6,"endColumn":26},{"ruleId":"32","severity":1,"message":"36","line":6,"column":45,"nodeType":"34","messageId":"35","endLine":6,"endColumn":63},{"ruleId":"37","severity":1,"message":"38","line":7,"column":1,"nodeType":"39","endLine":30,"endColumn":2},{"ruleId":"37","severity":1,"message":"40","line":1,"column":1,"nodeType":"39","endLine":42,"endColumn":2},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'setIsAuthenticated' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]